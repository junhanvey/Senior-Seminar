group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Record = numeric()
)
x = 1:710
# recs23 <- add_row(recs23, Team = Teams$Away[1], Record = tmRec(Teams$Away[1]))
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Record = tmRec(Teams$Away[i]))
}
print(recs23)
View(recs23)
View(recs23)
teamGms("UNT Dallas")
teamGms("Fort Valley St.")
View(cbbga24)
View(cbbga24)
View(cbbga23)
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
summarise()
recs23 <- tibble(
Team = character(),
Record = numeric()
)
x = 1:710
# recs23 <- add_row(recs23, Team = Teams$Away[1], Record = tmRec(Teams$Away[1]))
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Record = tmRec(Teams$Away[i]))
}
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Record = numeric()
)
x = 1:710
# recs23 <- add_row(recs23, Team = Teams$Away[1], Record = tmRec(Teams$Away[1]))
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Record = tmRec(Teams$Away[i]))
}
print(recs23)
library(tidyverse)
library(dplyr)
library(magrittr)
library(ggplot2)
library(readr)
cbbga24 <- as_tibble(cbbga24)
cbbga24 <- read.fwf("http://kenpom.com/cbbga24.txt", widths = c(11, 23, 3, 23, 4, 5, 15), strip.white = TRUE, header = FALSE)
cbbga24 <- as_tibble(cbbga24)
cbbga24 <- rename(cbbga24, "Date" = "V1", "Away" = "V2", "AwayPts" = "V3", "Home" = "V4", "HomePts" = "V5",
"Neutral?" = "V6", "Site" = "V7"   )
cbbga24 |>
mutate(Diff = AwayPts - HomePts)
cbbga24 |>
arrange(Home)
cbbga24 |>
select(!c("Neutral?", "Site"))
cbbga24 <-
read.fwf("http://kenpom.com/cbbga24.txt", widths = c(11, 23, 3, 23, 4, 5, 15),
strip.white = TRUE, header = FALSE) |> # a
rename("Date" = "V1", "Away" = "V2", "AwayPts" = "V3", "Home" = "V4",
"HomePts" = "V5", "Neutral?" = "V6", "Site" = "V7" ) |> # b
mutate(Diff = AwayPts - HomePts) |> # c
arrange(Home) |> # d
select(!c("Neutral?", "Site"))  # e
cbbga23 <- cbbga24 |>
mutate(Date = mdy(Date)) |>
filter(Date < '2024-01-01')
as_tibble(cbbga23)
teamGms <- function(team) {
cbbga23 |>
filter(Away == team | Home == team)
}
teamGms("Southern Utah")
teamGms("Southern Utah") |>
mutate(
Result = case_when(
(Away == "Southern Utah" & Diff > 0) ~ "Win",
(Home == "Southern Utah" & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss")) |>
summarize(record = wins/(wins + loss)) |>
as.numeric()
teamGms("Southern Utah") |>
mutate(
Result = case_when(
(Away == "Southern Utah" & Diff > 0) ~ "Win",
(Home == "Southern Utah" & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss")) |>
# summarize(record = wins/(wins + loss)) |>
as.numeric()
tmRec <- function(team) {
teamGms(team) |>
mutate(
Result = case_when(
(Away == team & Diff > 0) ~ "Win",
(Home == team & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss")) |>
# summarize(record = wins/(wins + loss)) |>
as.numeric()
}
tmRec("Southern Utah")
tmRec("Southern Utah")[1]
tmRec <- function(team) {
teamGms(team) |>
mutate(
Result = case_when(
(Away == team & Diff > 0) ~ "Win",
(Home == team & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss", record = wins/(wins + loss)) |>
# summarize(record = wins/(wins + loss)) |>
as.numeric()
}
tmRec <- function(team){
teamGms(team) |>
mutate(
Result = case_when(
(Away == team & Diff > 0) ~ "Win",
(Home == team & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss"), record = wins/(wins + loss)) |>
# summarize(record = wins/(wins + loss)) |>
as.numeric()
}
tmRec("Southern Utah")
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Wins = numeric(),
Losses = numveric(),
Record = numeric()
)
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Wins = numeric(),
Losses = numeric(),
Record = numeric()
)
x = 1:710
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Wins = tmRec(Teams$Away[i][1]), Losses = tmRec(Teams$Away[i][2]),  Record = tmRec(Teams$Away[i][3]))
}
print(recs23)
tmRec("Southern Utah")[1]
tmRec("Southern Utah") [2]
tmRec("Southern Utah")[3]
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Wins = numeric(),
Losses = numeric(),
Record = numeric()
)
x = 1:710
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Wins = tmRec(Teams$Away[i])[1], Losses = tmRec(Teams$Away[i])[2],  Record = tmRec(Teams$Away[i])[3])
}
print(recs23)
library(hoops)
tmHist("Southern Utah")
ptsHist("Southern Utah")
library(hoops)
ptsHist("Southern Utah")
library(hoops)
library(ggplot2)
library(tidyverse)
library(dplyr)
?teamGms
library(hoops)
teamGms("Southern Utah")
library(hoops)
teamGms(cbbga23, "Southern Utah")
teamGms <- function(data, team){
tm <- data |>
dplyr::filter(Away == team | Home == team)
tm
}
teamGms(cbbga23, "Southern Utah")
\begin{table}[h]
?glm
cement <- readxl::read_xls("Concrete_Data.xls") |>
cement <- readxl::read_xls("Concrete_Data.xls")
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash(component 3)(kg in a m^3 mixture)",
"water" = "water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
library(tidyverse)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash(component 3)(kg in a m^3 mixture)",
"water" = "water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash(component 3)(kg in a m^3 mixture)",
"water" = "water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water(component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water  (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water  (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3 mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water  (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3 mixture)",
"coarseAgg" = "Coarse Aggregate  (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
?ggpairs
install.packages("GGally")
library(tidyverse)
library(GGally)
ggpairs(cement)
ggpairs(cement, lower = list(continuous = wrap("points", alpha = 0.3,
size = 0.1),
combo = wrap("dot", alpha = 0.4, size = 0.2)))
View(ggraph)
graDesc(startVal = 1, f = f, fPrime = fPrime)
setwd("~/Senior-Seminar")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(vtable)
library(caret)
library(psych)
knitr::opts_chunk$set(fig.width=5, fig.height=3)
df <- read_csv('nfl.csv')
head(df)
dfNum <- df[,7:18]
#
# names <- c("Mean", "Standard Deviation", "Minimum", "25%",
#            "Median", "75%", "Maximum")
#
# vars <- c("Points", "Offensive Yards", "Penalty Yards", "Penalties",
#           "Turnovers", "Turnover Diff.", "Penalty Diff.",
#           "Point Diff.", "Offensive Yards Diff.",
#           "Penalty Yard Diff.")
#
# stats <- c('mean(x)', 'sd(x)', "min(x)", 'pctile(x)[25]',
#            "median(x)", "pctile(x)[75]", "max(x)")
#
# widths <- c(25, 5, 25, 10, 7.5, 10, 7.5, 10)
#
# sumStats <- sumtable(dfNum, summ.names = names, labels = vars, add.median = T,
#                      col.width = widths, summ = stats)
# totalHome <- sum(df$home)
# homeWins <- sum(df$home*df$won)
# homeLosses <- totalHome - homeWins
# awayWins <- homeLosses
# awayLosses <- homeWins
# totalHome <- sum(df$home)
# homeWins <- sum(df$home*df$won)
# homeLosses <- totalHome - homeWins
# awayWins <- homeLosses
# awayLosses <- homeWins
refStats <- read_csv('refStats.csv')
ggplot(refStats, aes(x = crew, y = penalties)) +
geom_bar(stat = "identity", fill = "blue4", color = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Referee Crew", y = "Total Penalties")
ggplot(refStats, aes(x = crew, y = penalties/games)) +
geom_bar(stat = "identity", fill = "blue4", color = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Referee Crew", y = "Penalties per Game")
teamPen <- df |>
group_by(team) |>
summarise(penalties = sum(pCount),
wins = sum(won)) |>
arrange(desc(penalties))
ggplot(teamPen, aes(x = reorder(team, penalties), y = penalties)) +
geom_bar(stat = "identity", fill = "blue4", color = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Team", y = "Penalties from 22-23 Seasons")
ggplot(teamPen, aes(x = reorder(team, penalties), y = wins)) +
geom_bar(stat = "identity", fill = "blue4", color = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Team", y = "Wins in 22-23 Seasons")
ggplot(teamPen, aes(x = penalties, y = wins)) +
geom_point() +
ggtitle("Correlation Between Number of Wins and Penalties") +
theme_minimal() +
labs(x = "Total Penalties", y = "Wins (out of a possible 34)")
df$won <- as.factor(df$won)
df$home <- as.factor(df$home)
set.seed(1)
testIndex <- createDataPartition(df$won, times = 1, p = 0.7,
list = F)
train <- df[testIndex, ]
test <- df[-testIndex, ]
penMod <- glm(won ~ pCount + pYards + penDiff + pYdDiff, data = train,
family = "binomial")
summary(penMod)
y = predict(penMod, train, type = "response")
y_hat0 <- ifelse(y > .50, 1, 0) |>
factor(levels = levels(train$won))
lgCm0 <- confusionMatrix(data = y_hat0, reference = train$won, positive = "1")
lgCm0
vif(mod1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(vtable)
library(caret)
library(psych)
library(car)
knitr::opts_chunk$set(fig.width=5, fig.height=3)
library(car)
vif1 <- vif(mod1)
mod1 <- glm(won ~ oYards + points + to + tDiff + penDiff + ydsDiff +
pYdDiff + home, data = train, family = "binomial")
summary(mod1)
exp(-0.013638)
vif1 <- vif(mod1)
vif1
ggplot(mod1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0)
?case_when
df$won <- as.factor(df$won)
df$home <- as.factor(df$home)
df <- df |>
mutate(
hWin = case_when(("home" == 1 & "won" == 1) ~ 1,
.default = 0)
)
set.seed(1)
testIndex <- createDataPartition(df$won, times = 1, p = 0.7,
list = F)
train <- df[testIndex, ]
test <- df[-testIndex, ]
View(df)
df$won <- as.factor(df$won)
df$home <- as.factor(df$home)
df <- df |>
mutate(
hWin = case_when(("home" == "1" & "won" == "1") ~ 1,
.default = 0)
)
set.seed(1)
testIndex <- createDataPartition(df$won, times = 1, p = 0.7,
list = F)
train <- df[testIndex, ]
test <- df[-testIndex, ]
View(df)
df$won <- as.factor(df$won)
df$home <- as.factor(df$home)
df <- df |>
mutate(
hWin = case_when((home == "1" & won == "1") ~ 1,
.default = 0)
)
set.seed(1)
testIndex <- createDataPartition(df$won, times = 1, p = 0.7,
list = F)
train <- df[testIndex, ]
test <- df[-testIndex, ]
View(df)
View(refStats)
mod2 <- glm(hWin ~ oYards + points + to + tDiff + penDiff + ydsDiff +
pYdDiff + home + crew, data = train, family = "binomial")
summary(mod2)
vif2 <- vif(mod2)
vif2
y = predict(mod2, train, type = "response")
y_hat <- ifelse(y > .50, 1, 0) |>
factor(levels = levels(train$won))
lgCm <- confusionMatrix(data = y_hat, reference = train$won, positive = "1")
lgCm
